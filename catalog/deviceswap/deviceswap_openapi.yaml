openapi: 3.0.3
info:
  title: Device Swap
  description: |
    This API allows to check the last time that the phone (device) - phone number association has changed
  version: 0.1.0
  x-camara-commonalities: 0.4.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Telef√≥nica Open Gateway DevRel
    url: https://opengateway.telefonica.com/en/developer-hub
    email: devrel@telefonica.com
servers:
  - url: '{host}/device-swap/v0.1'
    variables:
      host:
        default: sandbox.opengateway.telefonica.com/apigateway
        description: API gateway URL
paths: 
  /retrieve-date:
    post:
      summary: Device Swap Retrieve v0.1
      tags:
        - Retrieve the latest device swap date
      description: |
        Get timestamp of last device swap for a mobile user account provided with phone number.

        Check the [Authorization guide](/docs/authorization) on how to get an OAuth2 token, with the following scope:

        `dpv:FraudPreventionAndDetection#device-swap:retrieve-date`
      operationId: retrieveDeviceSwapDate
      security:
        - three_legged:
          - retrieve-device-swap-date
      requestBody:
        description: |
          Create a device swap date request for a phone number.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDeviceSwapDate"
        required: true
      responses:
        "200":
          description: Contains information about Device swap change
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSwapInfo"
        "400":
          $ref: "#/components/responses/Generic400"
        "401":
          $ref: "#/components/responses/Generic401"
        "403":
          $ref: "#/components/responses/Generic403"
        "404":
          $ref: "#/components/responses/Generic404"
        "422":
          $ref: "#/components/responses/Generic422"
        "500":
          $ref: "#/components/responses/Generic500"
        "503":
          $ref: "#/components/responses/Generic503"
        "504":
          $ref: "#/components/responses/Generic504"
  /check:
    post:
      summary: Device Swap Check v0.1
      tags:
        - Check for a device swap
      description: |
        Check if device swap has been performed during a past period

        Check the [Authorization guide](/docs/authorization) on how to get an OAuth2 token, with the following scope:

        `dpv:FraudPreventionAndDetection#device-swap:check`
      operationId: checkDeviceSwap
      security:
        - three_legged:
          - check-device-swap
      requestBody:
        description: |
          Create a check device swap request for a phone number.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCheckDeviceSwap"
        required: true
      responses:
        "200":
          description: Returns whether a device swap has been performed during a past period
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckDeviceSwapInfo"
        "400":
          $ref: "#/components/responses/Generic400Check"
        "401":
          $ref: "#/components/responses/Generic401"
        "403":
          $ref: "#/components/responses/Generic403"
        "404":
          $ref: "#/components/responses/Generic404"
        "422":
          $ref: "#/components/responses/Generic422"
        "500":
          $ref: "#/components/responses/Generic500"
        "503":
          $ref: "#/components/responses/Generic503"
        "504":
          $ref: "#/components/responses/Generic504"
components:
  securitySchemes:
    three_legged:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://{host}/authorize
          tokenUrl: https://{host}/token
          scopes:
            check-device-swap: checkDeviceSwap operation
            retrieve-device-swap-date: retrieveDeviceSwapDate operation
  schemas:
    DeviceSwapInfo:
      type: object
      required:
        - latestDeviceChange
      properties:
        latestDeviceChange:
          type: string
          format: date-time
          description: Timestamp of latest device swap performed. It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)
          nullable: true
          example: "2023-07-03T14:27:08.312+02:00"    
    CreateDeviceSwapDate:
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
    CreateCheckDeviceSwap:
      type: object
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
        maxAge:
          type: integer
          example: 240
          description: |
            Period in hours to be checked for device swap.
          format: int32
          minimum: 1
          maximum: 2400
          default: 240
    PhoneNumber:
      type: string
      pattern: '^\+[1-9][0-9]{4,14}$'
      example: '+34666111333'
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
    CheckDeviceSwapInfo:
      type: object
      required:
        - swapped
      properties:
        swapped:
          type: boolean
          description: Indicates whether the device has been swapped during the period within the provided age.
    ErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description   
  responses:
    Generic400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    Generic400Check:
      description: |-
        Bad Request 
        
        In addition to regular scenario of INVALID_ARGUMENT, other scenarios may exist:
        - Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested ("code": "OUT_OF_RANGE","message": "Client specified an invalid range.")
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.
    Generic401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials.
    Generic403:
      description: |-
        Forbidden
        
        In addition to regular scenario of PERMISSION_DENIED, other scenarios may exist:
          - Phone number cannot be deducted from access token context. (`"code": "INVALID_TOKEN_CONTEXT","message": "Phone number cannot be deducted from access token context."`)
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_INVALID_TOKEN_CONTEXT:
              description: Reflect some inconsistency between information in some field of the API and the related OAuth2 Token
              value:
                status: 403
                code: INVALID_TOKEN_CONTEXT
                message: Phone number cannot be deducted from access token context
    Generic404:
      description: |-
        Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found               
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
    Generic422:
      description: |-
        Unprocessable Content

        - Service not supported for this phoneNumber. (`"code": "NOT_SUPPORTED","message": "Service not supported for this phoneNumber"`)
        - The phone number is not included in the request and the phone number information cannot be derived from the 3-legged access token. (`"code": "UNIDENTIFIABLE_PHONE_NUMBER","message": "The phone number is not included in the request and the phone number information cannot be derived from the 3-legged access token"`)
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_422_NOT_SUPPORTED:
              description: Not Supported
              value:
                status: 422
                code: NOT_SUPPORTED
                message: Service not supported for this phoneNumber
            UNIDENTIFIABLE_PHONE_NUMBER:
              description: The phone number is not included in the request and the phone number information cannot be derived from the 3-legged access token
              value:
                status: 422
                code: UNIDENTIFIABLE_PHONE_NUMBER
                message: The phone number cannot be identified
    Generic500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_500_INTERNAL:
              description: Problem in Server side. Regular Server Exception
              value:
                status: 500
                code: INTERNAL
                message: Unknown server error. Typically a server bug.
    Generic503:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_503_UNAVAILABLE:
              description: Service is not available. Temporary situation usually related to maintenance process in the server side
              value:
                status: 503
                code: UNAVAILABLE
                message: Service Unavailable.
    Generic504:
      description: Gateway Timeout
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_504_TIMEOUT:
              description: API Server Timeout
              value:
                status: 504
                code: TIMEOUT
                message: Request timeout exceeded.
